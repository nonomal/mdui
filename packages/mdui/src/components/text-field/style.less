:host {
  display: inline-block;
  width: 100%;
}

:host([disabled]) {
  pointer-events: none;
}

:host([type="hidden"]) {
  display: none;
}

.container {
  position: relative;
  display: flex;
  align-items: center;
  height: 100%;
  .transition(box-shadow, short4, standard);
  .padding(0, 16);

  &.has-icon {
    .padding-left(12);
  }

  &.has-end-icon,
  &.has-error-icon {
    .padding-right(12);
  }

  :host([variant="filled"]) & {
    box-shadow: inset 0 unit((-1 / @mdui-root-font-size), rem) 0 0 rgb(var(--mdui-color-on-surface-variant));
    .background-color(surface-container-highest);
    .shape-corner(extra-small, top);
  }

  :host([variant="filled"]) &.invalid,
  :host([variant="filled"]) &.invalid-style {
    box-shadow: inset 0 unit((-1 / @mdui-root-font-size), rem) 0 0 rgb(var(--mdui-color-error));
  }

  :host([variant="filled"]:hover) & {
    box-shadow: inset 0 unit((-1 / @mdui-root-font-size), rem) 0 0 rgb(var(--mdui-color-on-surface));
  }

  :host([variant="filled"]:hover) &.invalid,
  :host([variant="filled"]:hover) &.invalid-style {
    box-shadow: inset 0 unit((-1 / @mdui-root-font-size), rem) 0 0 rgb(var(--mdui-color-on-error-container));
  }

  :host([variant="filled"][focused]) &,
  :host([variant="filled"][focused-style]) & {
    box-shadow: inset 0 unit((-2 / @mdui-root-font-size), rem) 0 0 rgb(var(--mdui-color-primary));
  }

  :host([variant="filled"][focused]) &.invalid,
  :host([variant="filled"][focused-style]) &.invalid,
  :host([variant="filled"][focused]) &.invalid-style,
  :host([variant="filled"][focused-style]) &.invalid-style {
    box-shadow: inset 0 unit((-2 / @mdui-root-font-size), rem) 0 0 rgb(var(--mdui-color-error));
  }

  :host([variant="filled"][disabled]) & {
    box-shadow: inset 0 unit((-1 / @mdui-root-font-size), rem) 0 0 rgba(var(--mdui-color-on-surface), 38%);
    .background-color(on-surface, 4%);
  }

  :host([variant="outlined"]) & {
    box-shadow: inset 0 0 0 unit((1 / @mdui-root-font-size), rem) rgb(var(--mdui-color-outline));
    .shape-corner(extra-small);
  }

  :host([variant="outlined"]) &.invalid,
  :host([variant="outlined"]) &.invalid-style {
    box-shadow: inset 0 0 0 unit((1 / @mdui-root-font-size), rem) rgb(var(--mdui-color-error));
  }

  :host([variant="outlined"]:hover) & {
    box-shadow: inset 0 0 0 unit((1 / @mdui-root-font-size), rem) rgb(var(--mdui-color-on-surface));
  }

  :host([variant="outlined"]:hover) &.invalid,
  :host([variant="outlined"]:hover) &.invalid-style {
    box-shadow: inset 0 0 0 unit((1 / @mdui-root-font-size), rem) rgb(var(--mdui-color-on-error-container));
  }

  :host([variant="outlined"][focused]) &,
  :host([variant="outlined"][focused-style]) & {
    box-shadow: inset 0 0 0 unit((2 / @mdui-root-font-size), rem) rgb(var(--mdui-color-primary));
  }

  :host([variant="outlined"][focused]) &.invalid,
  :host([variant="outlined"][focused-style]) &.invalid,
  :host([variant="outlined"][focused]) &.invalid-style,
  :host([variant="outlined"][focused-style]) &.invalid-style {
    box-shadow: inset 0 0 0 unit((2 / @mdui-root-font-size), rem) rgb(var(--mdui-color-error));
  }

  :host([variant="outlined"][disabled]) & {
    box-shadow: inset 0 0 0 unit((2 / @mdui-root-font-size), rem) rgba(var(--mdui-color-on-surface), 12%);
  }
}

.icon,
.right-icon,
.prefix,
.suffix {
  display: flex;
  user-select: none;
  .color(on-surface-variant);

  :host([disabled]) & {
    .color(on-surface, 38%);
  }
}

.right-icon,
.suffix {
  .invalid &,
  .invalid-style & {
    .color(error);
  }

  :host(:hover) .invalid &,
  :host(:hover) .invalid-style & {
    .color(on-error-container);
  }

  :host([focused]) .invalid &,
  :host([focused-style]) .invalid &,
  :host([focused]) .invalid-style &,
  :host([focused-style]) .invalid-style & {
    .color(error);
  }
}

.icon,
.right-icon {
  .font-size(24);
}

.icon mdui-button-icon,
.right-icon mdui-button-icon,
::slotted(mdui-button-icon[slot]) {
  .margin-left(-8);
  .margin-right(-8);
}

.icon .i,
.right-icon .i,
::slotted([slot$="icon"]) {
  font-size: inherit;
}

.has-icon .icon {
  .margin-right(16);
}

.right-icon:not(.end-icon),
.has-end-icon .end-icon {
  .margin-left(16);
}

.prefix,
.suffix {
  display: none;
  .typescale(body-large);

  :host([variant="filled"][label]) & {
    .padding-top(16);
  }

  :host([focused]) &,
  :host([focused-style]) &,
  .has-value & {
    display: flex;
  }
}

.has-prefix .prefix {
  .padding-right(2);
}

.has-suffix .suffix {
  .padding-left(2);
}

.input-container {
  width: 100%;
  height: 100%;
}

.label {
  position: absolute;
  pointer-events: none;
  max-width: calc(100% - 1rem);
  // stylelint-disable-next-line
  display: -webkit-box;
  overflow: hidden;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
  .top(16);
  .color(on-surface-variant);
  .typescale(body-large);

  .invalid &,
  .invalid-style & {
    .color(error);
  }

  :host([variant="outlined"]) & {
    .padding(0, 4);
    .margin(0, -4);
  }

  :host([variant="outlined"]:hover) & {
    .color(on-surface);
  }

  :host([variant="filled"]:hover) .invalid &,
  :host([variant="outlined"]:hover) .invalid &,
  :host([variant="filled"]:hover) .invalid-style &,
  :host([variant="outlined"]:hover) .invalid-style & {
    .color(on-error-container);
  }

  :host([variant="filled"][focused]) &,
  :host([variant="filled"][focused-style]) &,
  :host([variant="outlined"][focused]) &,
  :host([variant="outlined"][focused-style]) & {
    .color(primary);
  }

  :host([variant="filled"][focused]) &,
  :host([variant="filled"][focused-style]) &,
  :host([variant="filled"]) .has-value &,
  :host([variant="filled"][type="date"]) &,
  :host([variant="filled"][type="datetime-local"]) &,
  :host([variant="filled"][type="month"]) &,
  :host([variant="filled"][type="time"]) &,
  :host([variant="filled"][type="week"]) & {
    .typescale(body-small);
    .top(4);
  }

  :host([variant="outlined"][focused]) &,
  :host([variant="outlined"][focused-style]) &,
  :host([variant="outlined"]) .has-value &,
  :host([variant="outlined"][type="date"]) &,
  :host([variant="outlined"][type="datetime-local"]) &,
  :host([variant="outlined"][type="month"]) &,
  :host([variant="outlined"][type="time"]) &,
  :host([variant="outlined"][type="week"]) & {
    .typescale(body-small);
    .top(-8);
    .left(12);
    .background-color(background);
  }

  :host([variant="filled"][focused]) .invalid &,
  :host([variant="filled"][focused-style]) .invalid &,
  :host([variant="outlined"][focused]) .invalid &,
  :host([variant="outlined"][focused-style]) .invalid &,
  :host([variant="filled"][focused]) .invalid-style &,
  :host([variant="filled"][focused-style]) .invalid-style &,
  :host([variant="outlined"][focused]) .invalid-style &,
  :host([variant="outlined"][focused-style]) .invalid-style & {
    .color(error);
  }

  :host([variant="filled"][disabled]) &,
  :host([variant="outlined"][disabled]) & {
    .color(on-surface, 38%);
  }
}

.input {
  display: flex;
  flex-wrap: wrap;
  width: 100%;
  height: 100%;
  min-height: 100%;
  border: none;
  outline: none;
  background: none;
  appearance: none;
  resize: none;
  cursor: inherit;
  font-family: inherit;
  .padding(16, 0);
  .typescale(body-large);
  .color(on-surface);
  .caret-color(primary);

  &.hide-input {
    opacity: 0;
    height: 0;
    min-height: 0;
    padding: 0 !important;
    overflow: hidden;
  }

  &::placeholder {
    .color(on-surface-variant);
  }

  .invalid &,
  .invalid-style & {
    .caret-color(error);
  }

  :host([disabled]) & {
    .color(on-surface, 38%);
  }

  :host([end-aligned]) & {
    text-align: right;
  }
}

:host([variant="filled"]) .label + .input {
  .padding(24, 0, 8, 0);
}

.supporting {
  display: flex;
  justify-content: space-between;
  .padding(4, 16);
  .color(on-surface-variant);

  &.invalid,
  &.invalid-style {
    .color(error);
  }
}

.helper {
  display: block;
  opacity: 1;
  .transition(opacity, short4, linear);
  .typescale(body-small);

  :host([disabled]) & {
    .color(on-surface, 38%);
  }

  :host([helper-on-focus]) & {
    opacity: 0;
  }

  :host([helper-on-focus][focused]) &,
  :host([helper-on-focus][focused-style]) & {
    opacity: 1;
  }
}

.error {
  .typescale(body-small);
}

.counter {
  flex-wrap: nowrap;
  .padding-left(16);
  .typescale(body-small);
}

// edge 中会默认添加密码切换按钮，隐藏掉
::-ms-reveal {
  display: none;
}

// 火狐中的日期时间选择器会默认添加 clear 按钮，隐藏掉
.is-firefox .input[type="date"],
.is-firefox .input[type="datetime-local"],
.is-firefox .input[type="time"] {
  clip-path: inset(0 2em 0 0);
}

// 移除 input[type="number"] 时，右侧的上下箭头
.input[type="number"]::-webkit-outer-spin-button,
.input[type="number"]::-webkit-inner-spin-button {
  // stylelint-disable-next-line
  -webkit-appearance: none;
  display: none;
}

.input[type="number"] {
  // stylelint-disable-next-line
  -moz-appearance: textfield;
}

// 移除 input[type="search"] 时，右侧的清空图标
.input[type="search"]::-webkit-search-cancel-button {
  // stylelint-disable-next-line
  -webkit-appearance: none;
}
